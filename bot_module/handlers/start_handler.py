import os

from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, CallbackQuery, FSInputFile, Audio

from bot_module.keyboards import generate_yes_no_kb
from FFT.test import *
from bot_module.keyboards import *
from search.search_music import get_track, download_track

router = Router()  # [1]


# –•—ç–Ω–¥–ª–µ—Ä –Ω–∞ –∫–æ–º–∞–Ω–¥—É /start
@router.message(Command("start"))
async def cmd_start(msg: Message):
    await msg.answer(
        "–ü—Ä–∏–≤–µ—Ç :)\n–Ø –±–æ—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–∫ –Ω–∞–∑—ã–≤–∞–µ–º–æ–π \'–ú—É–∑—ã–∫–∏ –§—É—Ä—å–µ\'\n‚öôÔ∏è –ü—Ä–∏—à–ª–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏ –∏–ª–∏ —Ç–µ–∫—Å—Ç, –∏ –º—ã "
        "–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ—ë –Ω–∞–π–¥—ë–º!")


@router.message()
async def track_search(msg: Message):
    filename, text_for_person = get_track(msg.text)
    if text_for_person:
        await msg.answer(f"üéâ –ù–∞—à–ª–∞—Å—å –ø–µ—Å–Ω—è \'{filename}\'.\n–•–æ—Ç–∏—Ç–µ —Å–∫–∞—á–∞—Ç—å —ç—Ç–æ—Ç —Ç—Ä–µ–∫? –î–∞/–ù–µ—Ç\n>>> ",
                         reply_markup=generate_yes_no_kb())
    else:
        await msg.answer("üò∂‚Äçüå´Ô∏è–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")


@router.callback_query(F.data == "yes")
async def callback_query(msg: CallbackQuery):
    await msg.answer("–≠—Ç–æ—Ç –º–∞–ª–µ–Ω—å–∫–∏–π –º–∞–Ω–µ–≤—Ä –º–æ–∂–µ—Ç –≤–∞–º —Å—Ç–æ–∏—Ç—å 51 –≥–æ–¥")
    text_track, filename = download_track()
    audio_from_pc = FSInputFile(filename+".mp3")
    await msg.message.answer_audio(audio_from_pc, caption=text_track[:1000])

    create_video(filename+".mp3", "send_it.mp4")
    await msg.message.answer_video(FSInputFile("send_it.mp4"))
    # os.remove(filename+".mp3")


@router.callback_query(F.data == "no")
async def callback_query(msg: CallbackQuery):
    await msg.answer()
    await msg.message.answer("üé≤ –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å! \n–Ø –Ω–∞–π–¥—É –≤—Å—ë, —á—Ç–æ –≤—ã –∑–∞—Ö–æ—Ç–∏—Ç–µ)")
